{"version":3,"file":"static/js/558.69c08282.chunk.js","mappings":"gOAIMA,GAAiBC,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAmBC,SAAAA,GAAK,eAC3CC,WAD2C,GAE3CC,aAF2C,GAG3CC,QAAS,QACLH,EAAAA,MAAAA,gBAAAA,EAAAA,EAAAA,GAAAA,GAAkCA,EAAAA,MAAlCA,gBAJR,O,WAOyBA,GACrB,OACI,mCAAoBA,EAAAA,CAAOI,KAAK,Y,SCCf,4BAAkBC,EAAlB,EAAkBA,WACvC,GAAuEC,EAAAA,EAAAA,KAAjE,EAAN,EAAM,WAAN,EAAM,eAAN,EAAM,MAA8CC,EAApD,EAAuCC,UAAaD,aAC5CE,GAAWC,EAAAA,EAAAA,KAAXD,OACFE,EAAQ,mCAAG,qGACP,IAAIC,SAAQC,SAAAA,GAAO,OAAIC,WAAWD,EAAxC,QADa,uBAEWJ,EAAOM,EAAD,MAAiBA,EAA/C,UAFa,QAEPC,EAFO,QAGb,UACI,iBAAIA,EAAAA,UACAC,EAAAA,EAAAA,MAAYZ,EAAZY,uBACG,cAAID,EAAAA,YACPE,IACAD,EAAAA,EAAAA,MAAYZ,EAAZY,uBARK,2CAAH,sDAcd,OACI,qBAAMN,SAAUQ,EAAaR,IACzBS,EAAAA,cAAAA,EAAAA,EAAAA,KAAaf,EADjB,cAEI,qBAAQgB,KAAK,WACb,qBACIC,SAAU,kBAAMA,EAAS,UACzBC,MAAOlB,EAAWmB,WAClBC,SAAUlB,IAEd,qBAAQc,KAAK,WACb,qBACIC,SAAU,kBAAMA,EAAS,aACzBI,aAAa,mBACbD,SAAUlB,EACVgB,MAAOlB,EAAWsB,gBAEtB,qBAAQN,KAAK,WACb,mBAAgBO,QAASC,SAAAA,GAAC,OAAIC,EAAe,mBAAmBL,SAAUlB,GAAeF,EAhB7F,sBAiBI,qBAAcoB,SAAUlB,GAAeF,EAjB3C,oBAkBI,qBAAiBuB,QAASC,SAAAA,GAAC,OAAIC,EAAe,WAAWL,SAAUlB,GAAeF,EAnB1F","sources":["../node_modules/easybase-react/src/ui/Auth/components/ForgotPassword.tsx","../node_modules/easybase-react/src/ui/Auth/pages/SignIn.tsx"],"sourcesContent":["import React from 'react';\nimport TextButton from './internal/TextButton';\nimport styled from 'styled-components';\n\nconst ForgotPassword = styled(TextButton)(props => ({\n    marginTop: -53,\n    marginBottom: 53,\n    display: 'flex',\n    ...(props.theme.forgotPassword ? { ...props.theme.forgotPassword } : {})\n}))\n\nexport default function (props: React.ButtonHTMLAttributes<HTMLButtonElement>) {\n    return (\n        <ForgotPassword {...props} type=\"button\" />\n    )\n}\n","import React from 'react';\nimport Form from '../components/Form';\nimport EmailInput from '../components/EmailInput';\nimport PasswordInput from '../components/PasswordInput';\nimport HeaderText from '../components/HeaderText';\nimport ForgotPassword from '../components/ForgotPassword';\nimport SecondaryButton from '../components/SecondaryButton';\nimport SubmitButton from '../components/SubmitButton';\nimport Spacer from '../components/Spacer';\nimport { useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\nimport { IPage } from '../../uiTypes';\nimport useEasybase from '../../../useEasybase';\n\nexport default function ({ setCurrentPage, dictionary }: IPage) {\n    const { register, handleSubmit, reset, formState: { isSubmitting } } = useForm();\n    const { signIn } = useEasybase();\n    const onSubmit = async (formData: Record<string, string>) => {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        const signInRes = await signIn(formData.email, formData.password);\n        if (!signInRes.success) {\n            if (signInRes.errorCode === \"NoUserExists\") {\n                toast.error(dictionary.errorUserDoesNotExist!)\n            } else if (signInRes.errorCode === \"BadFormat\") {\n                reset();\n                toast.error(dictionary.errorBadInputFormat!)\n            }\n        }\n        // Will automatically change views\n    }\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)}>\n            <HeaderText>{dictionary.signInHeader}</HeaderText>\n            <Spacer size=\"medium\" />\n            <EmailInput\n                register={() => register(\"email\")}\n                label={dictionary.emailLabel}\n                disabled={isSubmitting}\n            />\n            <Spacer size=\"xlarge\" />\n            <PasswordInput\n                register={() => register(\"password\")}\n                autoComplete=\"current-password\"\n                disabled={isSubmitting}\n                label={dictionary.passwordLabel}\n            />\n            <Spacer size=\"xlarge\" />\n            <ForgotPassword onClick={_ => setCurrentPage(\"ForgotPassword\")} disabled={isSubmitting}>{dictionary.forgotPasswordButton}</ForgotPassword>\n            <SubmitButton disabled={isSubmitting}>{dictionary.signInSubmitButton}</SubmitButton>\n            <SecondaryButton onClick={_ => setCurrentPage(\"SignUp\")} disabled={isSubmitting}>{dictionary.noAccountButton}</SecondaryButton>\n        </Form>\n    )\n}\n"],"names":["ForgotPassword","styled","props","marginTop","marginBottom","display","type","dictionary","useForm","isSubmitting","formState","signIn","useEasybase","onSubmit","Promise","resolve","setTimeout","formData","signInRes","toast","reset","handleSubmit","React","size","register","label","emailLabel","disabled","autoComplete","passwordLabel","onClick","_","setCurrentPage"],"sourceRoot":""}